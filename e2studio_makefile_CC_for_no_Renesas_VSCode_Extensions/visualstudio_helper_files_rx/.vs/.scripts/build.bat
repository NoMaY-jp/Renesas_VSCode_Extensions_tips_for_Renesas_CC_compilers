@echo off
setlocal enabledelayedexpansion
rem Always you must be carefull for spaces and special characters in path name

call "%~dp0inherit_environments.bat"
call :expand_enviroment_variables_in_args %*
:expand_enviroment_variables_in_args

if "%~1" == "make" goto build_using_makefile_directly

rem ==========================================================================
:build_using_e2studio_headlessbuild
rem ==========================================================================

rem https://help.eclipse.org/latest/index.jsp?topic=/org.eclipse.platform.doc.isv/reference/misc/runtime-options.html
rem https://gnu-mcu-eclipse.github.io/advanced/headless-builds/

rem Check eclipsec
call :check_eclipsec

rem Setup tool paths
set Path=%ECLIPSE_HOME%;%Path%

echo ======== Start e2 studio headless build(%DATE% %TIME: =%) ========

rem Import the project to the dedicated headless build workspace
set CMDLINE=%ECLIPSEC% -nosplash --launcher.suppressErrors --launcher.ini %ECLIPSE_HOME%\e2studio.ini -application org.eclipse.cdt.managedbuilder.core.headlessbuild ^
-no-indexer -data %3 -import %4 %2 %5/%6
ECHO %CMDLINE%
%CMDLINE% 2>&1

echo ======== End e2 studio headless build(%DATE% %TIME: =%) ========

exit %ERRORLEVEL%

rem ==========================================================================
:build_using_makefile_directly
rem ==========================================================================

rem Check compiler, make and makefile
call :check_compiler_make_and_makefile %3

rem Get other options
call :get_other_options %*

rem Setup tool paths
set Path=%TCINSTALL%\bin;%SUPPORT_AREA%\Utilities;%Path%

echo ======== Start build using makefile generated by e2 studio(%DATE% %TIME: =%) ========

if "%~2" == "build" goto build_using_makefile_directly___skip_clean

rem make clean
chdir /d %3
set CMDLINE=make.exe %OPTIONS% clean
ECHO %CMDLINE%
%CMDLINE% 2>&1

if errorlevel 1 goto :build_using_makefile_directly___exit

:build_using_makefile_directly___skip_clean

rem make all
chdir /d %3
set CMDLINE=make.exe %OPTIONS% all
ECHO %CMDLINE%
%CMDLINE% 2>&1

:build_using_makefile_directly___exit

echo ======== End build using makefile generated by e2 studio(%DATE% %TIME: =%) ========

exit %ERRORLEVEL%

rem ==========================================================================
:check_eclipsec
rem ==========================================================================

rem Check eclipsec
if "%ECLIPSE_HOME%" == "" (
    call :error 256 ^
    "The following path is not defined. Please check the '%CppPropertiesFileName%' file." ^
    "'ECLIPSE_HOME='"
)
if not exist "%ECLIPSE_HOME%" (
    call :error 256 ^
    "The following folder is not found. Please check the '%CppPropertiesFileName%' file." ^
    "'%ECLIPSE_HOME%'" ^
    "^!PO^!'ECLIPSE_HOME=' defines the path.^!PC^!"
)
if exist "%ECLIPSE_HOME%\eclipsec.exe" (
    set ECLIPSEC=eclipsec.exe
)
if exist "%ECLIPSE_HOME%\e2studioc.exe" (
    set ECLIPSEC=e2studioc.exe
)
if "%ECLIPSEC%" == "" (
    call :error 256 ^
    "Neither of the following programs are found. Please check e2 studio installation." ^
    "'%ECLIPSE_HOME%\eclipsec.exe'" ^
    "'%ECLIPSE_HOME%\e2studioc.exe'"
)

goto :EOF

rem ==========================================================================
:check_compiler_make_and_makefile
rem ==========================================================================

rem Check compiler
if "%TCINSTALL%" == "" (
    call :error 256 ^
    "The following path is not defined. Please check the '%CppPropertiesFileName%' file." ^
    "'TCINSTALL='"
)
if not exist "%TCINSTALL%" (
    call :error 256 ^
    "The following folder is not found. Please check the '%CppPropertiesFileName%' file." ^
    "'%TCINSTALL%'" ^
    "^!PO^!'TCINSTALL=' defines the path.^!PC^!"
)
if not exist "%TCINSTALL%\bin\cc*.exe" if not exist "%TCINSTALL%\bin\*gcc.exe" if not exist "%TCINSTALL%\bin\clang.exe" (
    call :error 256 ^
    "Compiler seems to have not installed in the following folder. Please check compiler installation." ^
    "'%TCINSTALL%'" ^
    "^!PO^!'TCINSTALL=' defines the path.^!PC^!"
)

rem Check make
if "%SUPPORT_AREA%" == "" (
    call :error 256 ^
    "The following path is not defined. Please check the '%CppPropertiesFileName%' file." ^
    "'SUPPORT_AREA='"
)
if not exist "%SUPPORT_AREA%" (
    call :error 256 ^
    "The following folder is not found. Please check the '%CppPropertiesFileName%' file." ^
    "'%SUPPORT_AREA%'" ^
    "^!PO!'SUPPORT_AREA=' defines the path.^!PC^!"
)
if not exist "%SUPPORT_AREA%\Utilities\make.exe" (
    call :error 256 ^
    "The following program is not found. Please check e2 studio installation." ^
    "'%SUPPORT_AREA%\Utilities\make.exe'"
)

rem Check makefile
if "%~1" == "" (
    call :error 256 ^
    "Folder containing makefile is not defined. Please check the '%CppPropertiesFileName%' file."
)
if not exist "%~dp1" (
    call :error 256 ^
    "The following folder is not found. Please check the '%CppPropertiesFileName%' file." ^
    "'%~1'"
)
if not exist "%~1\makefile" (
    call :error 256 ^
    "The following file is not found. Please setup 'makefile' and its related files." ^
    "'%~1\makefile'"
)

goto :EOF

rem ==========================================================================
:get_other_options
rem ==========================================================================

set OPTIONS=
:get_other_options_loop
if "%~4" == "" goto get_other_options_loop_break
if "%~5" == "" (set OPTIONS=%OPTIONS%%4) else (set OPTIONS=%OPTIONS%%4 )
shift
goto get_other_options_loop
:get_other_options_loop_break

goto :EOF

rem ==========================================================================
:error
rem ==========================================================================

set PO=^(
set PC=^)
if  "%TasksJsonFileName:~0,4%" == ".vs\" (
    rem For Visual Studio
    rem The following format suppresses bad behavior of the error parser.
    echo \\^> BUILD : error : %~2 %~3 %~4
) else (
    rem For Visual Studio Code
    echo Error: %~2
    if not "%~3" == "" echo %~3
    if not "%~4" == "" echo %~4
    rem The following character suppresses removal of an empty line.
    echo ^>
)

exit %1
